name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add Microsoft SQL Server repository
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/mssql-server-2019.list | sudo tee /etc/apt/sources.list.d/mssql-server.list
          sudo apt-get update

      - name: Install dependencies
        run: |
          sudo apt-get install -y libldap-common

      - name: Create dummy libldap-2.4-2 package
        run: |
          echo "Package: libldap-2.4-2
          Version: 2.4.42-2ubuntu3
          Architecture: amd64
          Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
          Installed-Size: 1
          Depends: libc6 (>= 2.14)
          Section: libs
          Priority: optional
          Homepage: http://www.openldap.org/
          Description: OpenLDAP library - client-side library" | sudo tee /var/lib/dpkg/status/libldap-2.4-2

      - name: Install SQL Server
        run: |
          sudo apt-get install -y mssql-server

      - name: Run SQL Server setup
        run: |
          sudo MSSQL_SA_PASSWORD=YourStrong!Passw0rd /opt/mssql/bin/mssql-conf setup accept-eula

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Deploy Tables to Fabric Warehouse
        env:
          FABRIC_CONNECTION_STRING: ${{ secrets.FABRIC_CONNECTION_STRING }}
          FABRIC_USERNAME: ${{ secrets.FABRIC_USERNAME }}
          FABRIC_PASSWORD: ${{ secrets.FABRIC_PASSWORD }}
        run: |
          for file in $(find ./Tables -name '*.sql'); do
            sqlcmd -S ${{ env.FABRIC_CONNECTION_STRING }} -U ${{ env.FABRIC_USERNAME }} -P ${{ env.FABRIC_PASSWORD }} -d ${{ secrets.DATABASE_NAME }} -i $file
          done
